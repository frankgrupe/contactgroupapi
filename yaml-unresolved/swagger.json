openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/CXArchitecture/ContactGroupAPI/1.0.0
info:
  description: This is a sample API that can be used to kickstart SAP Commerce or Microservice API develoment. More info can be found on [SAP Wiki](https://wiki.hybris.com/display/prodandtech/Hypermedia+Milestone+%233+-+Integrating+through+the+stack)
  version: "1.2.0"
  title: Simple Contact Group API
  contact:
    email: frank.grupe@sap.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: contacts
    description: Everything about Contacts
  - name: groups
    description: Everything about Groups
paths:
  /contacts:
    get:
      tags:
        - contacts
      summary: Search contacts
      operationId: getContacts
      description: |
        By passing in the appropriate options, you can search for
        available contacts in the system
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyContacts'
        '400':
          description: bad input parameter
    post:
      tags:
        - contacts
      summary: Create a new contact
      operationId: createContact
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        description: Contact item to add
  '/contacts/{contactId}':
    get:
      tags:
        - contacts
      summary: Find a contact
      operationId: getContact
      description: |
        By passing in the appropriate options, you can search for
        available contacts in the system
      parameters:
        - name: contactId
          in: path
          description: ID of contact to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Contact found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyContact'
        '400':
          description: bad input parameter
        '404':
          description: Contact not found
    put:
      tags:
        - contacts
      summary: Replace a contact
      operationId: replaceContact
      parameters:
        - name: contactId
          in: path
          description: ID of contact to replace
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: item replaced
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        description: Contact to replace
    patch:
      tags:
        - contacts
      summary: Update a contact
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          description: ID of contact to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        description: Contact to update
    delete:
      tags:
        - contacts
      summary: Delete a contact
      operationId: removeContact
      parameters:
        - name: contactId
          in: path
          description: ID of contact to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Contact deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Contact not found
  '/contacts/{contactId}/groups':
    get:
      tags:
        - contacts
      summary: Find the groups of a contact
      operationId: getContactGroups
      parameters:
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Contact Groups found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyGroups'
        '400':
          description: bad input parameter
  '/contacts/{contactId}/groups/{groupId}':
    post:
      tags:
        - contacts
      summary: Add a group to a contact
      operationId: addGroupToContact
      parameters:
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: ID of group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group added to Contact
        '400':
          description: bad input parameter
    delete:
      tags:
        - contacts
      summary: Remove a group from a contact
      operationId: removeGroupFromContact
      parameters:
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: ID of group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group removed from Contact
        '400':
          description: bad input parameter
  /groups:
    get:
      tags:
        - groups
      summary: Search groups
      operationId: getGroups
      description: |
        By passing in the appropriate options, you can search for
        available groups in the system
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/HyGroups'
        '400':
          description: bad input parameter
    post:
      tags:
        - groups
      summary: Create a new group
      operationId: createGroup
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group item to add
  '/groups/{groupId}':
    get:
      tags:
        - groups
      summary: searches groups
      operationId: getGroup
      description: |
        By passing in the appropriate options, you can search for
        available groups in the system
      parameters:
        - name: groupId
          in: path
          description: ID of group to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyGroup'
        '400':
          description: bad input parameter
        '404':
          description: Group not found
    put:
      tags:
        - groups
      summary: Replace a group
      operationId: replaceGroup
      parameters:
        - name: groupId
          in: path
          description: ID of group to replace
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: item replaced
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group to replace
    patch:
      tags:
        - groups
      summary: Update a group
      operationId: updateGroup
      parameters:
        - name: groupId
          in: path
          description: ID of group to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group to update    
    delete:
      tags:
        - groups
      summary: Delete a group
      operationId: removeGroup
      parameters:
        - name: groupId
          in: path
          description: ID of group to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
  '/groups/{groupId}/members':
    get:
      tags:
        - groups
      summary: Find the members of a group
      operationId: getGroupMembers
      parameters:
        - name: groupId
          in: path
          description: ID of group
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Group Members found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyContacts'
        '400':
          description: bad input parameter
  '/groups/{groupId}/members/{contactId}':
    post:
      tags:
        - groups
      summary: Add a member to a group
      operationId: addMemberToGroup
      parameters:
        - name: groupId
          in: path
          description: ID of group
          required: true
          schema:
            type: integer
            format: int64
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Member added to Group
        '400':
          description: bad input parameter
    delete:
      tags:
        - groups
      summary: Remove a contact from a group
      operationId: removeMemberFromGroup
      parameters:
        - name: groupId
          in: path
          description: ID of group
          required: true
          schema:
            type: integer
            format: int64
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Member removed from Group
        '400':
          description: bad input parameter
components:
  schemas:
    # custom schemas with hypermedia links
    HyContacts:
      allOf: 
        - type: array
          properties:
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/HyContact'
        - $ref: '#/components/schemas/HyLinks'
        - $ref: '#/components/schemas/HyPagination'
    HyContact:
      allOf: 
        - type: object
          properties:
            contact:
              $ref: '#/components/schemas/Contact'
        - $ref: '#/components/schemas/HyLinks'
    HyGroups:
      allOf: 
        - type: array
          properties:
            groups:
              type: array
              items:
                $ref: '#/components/schemas/HyGroup'
        - $ref: '#/components/schemas/HyLinks'
        - $ref: '#/components/schemas/HyPagination'
    HyGroup:
      allOf: 
        - type: object
          properties:
            group:
              $ref: '#/components/schemas/Group'
        - $ref: '#/components/schemas/HyLinks'
    # generic hyperlinks definition
    HyPagination:
      type: object
      properties:
        pagination:
          type: object
          properties:
            page: 
              type: integer
              example: 1
            size:
              type: integer
              example: 10
            totalcount:
              type: integer
              example: 14
            links:
              type: array
              items:
                $ref: '#/components/schemas/HyLink'
    HyLinks:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/HyLink'
    HyLink:
      type: object
      required:
        - href
        - rel
        - method
      properties:
        href:
          type: string
          example: '/contacts/0'
        rel:
          type: string
          example: 'self'
        method: 
          type: string
          example: 'DELETE'
    # custom schemas without hypermedia links
    Contact:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          example: 'Mary'
        lastName:
          type: string
          example: 'Jane'
        email:
          type: string
          example: 'mary.jane@milehighindustries.com'
    Group:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: 'Party People'
        description:
          type: string
          example: 'These are the people to roll with'
        created:
          type: string
          example: '1985-04-12T23:20:50.52Z'